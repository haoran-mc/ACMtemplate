#include <cstdio>
#include <cstring>
const int maxn = 1000;
int cnt;
char sec[100][maxn];
FILE* tex = NULL;
char buff[maxn];

//判断文件名与后缀
struct LineBreaker {
    char name[maxn], file[maxn];
    int nl, fl;
    void solve(const char s[]) {
        nl = fl = 0;
        int i = 0;
        while (s[i] && s[i] != '<') ++i;
        if (s[i]) ++i;
        while (s[i] && s[i] != '>')
            name[nl++] = s[i++];
        while (s[i] && s[i] != '<') ++i;
        if (s[i]) ++i;
        while (s[i] && s[i] != '>')
            file[fl++] = s[i++];
        name[nl] = file[fl] = 0;
    }
} lb;

void readContents() {
    FILE* dirname = fopen("Contents", "r");
    while (fgets(sec[cnt++], maxn, (FILE*)dirname) != NULL) {
        continue;
    }
    fclose(dirname);
    while (sec[cnt-1][0] == 0 && cnt > 0)
        --cnt;
    for (int i = 0; i < cnt; ++i)
        if (sec[i][strlen(sec[i])-1] != 0)
            sec[i][strlen(sec[i])-1] = 0;
}

void file(const char* filename) {
    FILE* fp = fopen(filename, "r");
    while (fgets(buff, maxn, fp) != NULL)
        fprintf(tex, "%s", buff);
    fclose(fp);
}

int main() {
    tex = fopen("template.tex", "w");
    file("LaTeX-Head");
    readContents();
    for (int i = 0; i < cnt; ++ i) {
        fprintf(tex, "\\section{%s}\n", sec[i]);
        memcpy(buff, sec[i], sizeof buff);
        strcat(buff, "/Files");
        FILE* fp = fopen(buff, "r");
        while(fgets(buff, maxn, fp)) {
            if (buff[0] != '<') break;
            lb.solve(buff);
            fprintf(tex, "\\subsection{%s}\n", lb.name);
            memcpy(buff, sec[i], sizeof buff);
            buff[strlen(buff)+1] = 0;
            buff[strlen(buff)] = '/';
            strcat(buff, lb.file);
            fprintf(tex, "\\lstinputlisting{%s}\n", buff);
        }
        fclose(fp);
    }
    file("LaTeX-Tail");
    fclose(tex);
    return 0;
}

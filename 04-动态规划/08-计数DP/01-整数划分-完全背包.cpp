/*----------------------------------------------------------------
 * 文件名称：整数划分.cpp
 * 创建日期：2021年10月28日 星期四 16时51分46秒 5 * 题 目：AcWing 0900 整数划分 6 * 算 法：完全背包 7 * 描 述：一个正整数 n 可以表示成若干个正整数之和，
 * 形如：n = n1 + n2 + ... + nk， 9 * 其中 n1 >= n2 >= ... >= nk,k >= 1
 * 我们将这样的一种表示称为正整数 n 的一种划分。
 * 现在给定一个正整数 n，请你求出 n 共有多少种不同的划分方法。
 *
 *
 * 有一个体积为 n 的背包，和体积分别为 1, 2, 3, ..., n 的物品
 * 问装满这个背包的选法有多少种
 *
 * dp[i][j]: 从 [1, i] 中选总体积恰好为 j 的选法的数量
 *
 * dp[i][j] = dp[i - 1][j] + dp[i - 1][j - i] + dp[i - 1][j - 2i]
 * + dp[i - 1][j - 3i] + ... + dp[i - 1][j - si]
 *
 * 表示从 [1, i - 1] 中选总体积恰好为 j - ki 的选法的数量
 *
 * dp[i][j - i] = dp[i - 1][j - i] + dp[i - 1][j - 2i]
 * + dp[i - 1][j - 3i] + ... + dp[i - 1][j - si]
 *
 * 所以有：dp[i][j] = dp[i - 1][j] + dp[i][j - i];
 *
 ----------------------------------------------------------------*/

#include <cstdio>
const int maxn = 1e3 + 5, MOD = 1e9 + 7;
int dp[maxn];
int main() {
    int n; scanf("%d", &n);
    dp[0] = 1; // 总体积恰好为 0 的选法的方案数是一
    for (int i = 1; i <= n; ++ i)
        for (int j = i; j <= n; ++ j)
            dp[j] = (dp[j] + dp[j - i]) % MOD;
    printf("%d\n", dp[n]);
    return 0;
}

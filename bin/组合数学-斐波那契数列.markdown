<!-- -------------------------2020年11月24日 ---- 21时11分------------------------- -->

### 斐波那契数列

```cpp
template<typename T>
T Fibo1(T n) {
    if (n <= 1) return 1;

    std::vector<int> arr(n + 1);
    arr[0] = arr[1] = 1;
    for (int i = 2; i <= n; ++i)
        arr[i] = arr[i-1] + arr[i-2];
    return arr.back();
}

template<typename T>
T Fibo2(T n) {
    const double sqrt5 = std::sqrt(5);
    const double phi = (1 + sqrt5) / 2;
    return (T)(std::pow(phi, n+1) / sqrt5 + 0.5);
}

template<typename T>
T Fibo3(T n) {
    static std::vector<T> arr;
    if (n <= 1) return 1;
    else if (n >= (T)arr.size())
        arr.resize(n+1);

    if (!arr[n])
        arr[n] = Fibo3(n-1) + Fibo3(n-2);
    return arr[n];
}
```
